{"version":3,"sources":["components/OrderView.js","components/Order.js","components/Header.js","components/BookView.js","fbase.js","components/Inventory.js","components/App.js","components/LoginPanel.js","components/AddBookForm.js","store/actions.js","components/AdminBookView.js","components/AdminBookListing.js","components/AdminPanel.js","components/PageNotFound.js","store/adminPanelReducer.js","store/store.js","components/Router.js","index.js"],"names":["OrderView","className","this","props","book","name","onClick","event","removeFromOrder","React","Component","Order","orderedBooks","order","map","Header","handleClick","state","clicked","setState","bookstoreName","textColor","backgroundColor","headerCss","color","style","to","BookView","src","image","width","height","alt","author","addToOrder","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fbase","Rebase","createClass","database","Inventory","ref","syncState","context","removeBinding","bookListing","Array","isArray","books","key","App","title","filter","LoginPanel","authenticate","preventDefault","auth","signInWithEmailAndPassword","email","password","then","changeLoggedIn","catch","console","log","handleLoginChange","target","value","onSubmit","type","placeholder","id","onChange","AddBook","handleChange","newBook","checked","updateBook","addNewBook","editMode","editBook","titleOfBookForRemoval","description","onStock","reset","label","htmlFor","AddBookForm","connect","dispatch","payload","updateBookAction","sendBookToEdit","removeFromInventory","AdminBookView","sendBookToEditAction","AdminBookListing","list","AdminPanel","newValue","loggedIn","oldBookTitle","bookAfterEdit","newBooks","Fragment","PageNotFound","initialState","adminPanelReducer","action","bookToEdit","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Router","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa75997a.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class OrderView extends React.Component {\n  render() {\n    return (\n      <div className=\"orderView row\">\n        <div className=\"col-xs-8\">\n          <span>{this.props.book.name}</span>\n        </div>\n        <div className=\"col-xs-4\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={(event) =>\n              this.props.removeFromOrder(this.props.book.name)\n            }\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport OrderView from \"./OrderView\";\n\nclass Order extends React.Component {\n  render() {\n    const orderedBooks = this.props.order.map((order) => {\n      return (\n        <OrderView book={order} removeFromOrder={this.props.removeFromOrder} />\n      );\n    });\n\n    return (\n      <div className=\"order col-xs-6\">\n        <h2>Your order:</h2>\n        {orderedBooks}\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      bookstoreName: \"Black Books\",\n      clicked: true,\n      textColor: \"white\",\n      backgroundColor: \"black\",\n    };\n  }\n\n  handleClick = () => {\n    if (this.state.clicked) {\n      this.setState({\n        bookstoreName: \"White Books\",\n        textColor: \"black\",\n        backgroundColor: \"white\",\n      });\n    } else {\n      this.setState({\n        bookstoreName: \"Black Books\",\n        textColor: \"white\",\n        backgroundColor: \"black\",\n      });\n    }\n    this.setState({\n      clicked: !this.state.clicked,\n    });\n  };\n\n  render() {\n    let headerCss = {\n      color: this.state.textColor,\n      backgroundColor: this.state.backgroundColor,\n    };\n\n    return (\n      <div className=\"row header\" style={headerCss} onClick={this.handleClick}>\n        <center>\n          <h1>{this.state.bookstoreName}</h1>\n        </center>\n        <Link to=\"/admin\">\n          <button className=\"btn btn-info goToAdmin\">\n            Administrator Panel\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\n\nexport default class BookView extends React.Component {\n  render() {\n    return (\n      <div className=\"bookView row\">\n        <div className=\"col-xs-4\">\n          <img\n            src={this.props.book.image}\n            width=\"75\"\n            height=\"100\"\n            alt={this.props.book.name}\n          />\n        </div>\n        <div className=\"col-xs-4\">\n          <b>{this.props.book.name}</b>\n          <br />\n          <i>{this.props.book.author}</i>\n          <br />\n        </div>\n        <div className=\"col-xs-4\">\n          <button\n            className=\"btn btn-primary\"\n            onClick={(event) => this.props.addToOrder(this.props.book)}\n          >\n            Add to Order\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyBpxRy2jccSIsjRMchX2Jz2opisGEivfsU\",\n  authDomain: \"bookstore-6c2d7.firebaseapp.com\",\n  databaseURL: \"https://bookstore-6c2d7.firebaseio.com\",\n  projectId: \"bookstore-6c2d7\",\n  storageBucket: \"bookstore-6c2d7.appspot.com\",\n  messagingSenderId: \"55593945072\",\n  appId: \"1:55593945072:web:c0c7a3bdd0f40d48107f35\",\n  measurementId: \"G-45DECGV7R3\",\n});\n\nconst fbase = Rebase.createClass(firebaseApp.database());\n\nexport { fbase, firebaseApp };\n","import React from \"react\";\nimport BookView from \"./BookView\";\nimport { fbase } from \"../fbase\";\n\nclass Inventory extends React.Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.ref = fbase.syncState(\"bookstore/books\", {\n      context: this,\n      state: \"books\",\n    });\n  }\n\n  componentWillUnmount() {\n    fbase.removeBinding(this.ref);\n  }\n\n  render() {\n    let bookListing = <h4>No books on stock, sorry</h4>;\n\n    if (Array.isArray(this.state.books)) {\n      bookListing = this.state.books.map((book) => {\n        return (\n          <BookView\n            key={book.name}\n            book={book}\n            addToOrder={this.props.addToOrder}\n          />\n        );\n      });\n    }\n\n    return (\n      <div className=\"inventory col-xs-6\">\n        <h2>Bookstore inventory:</h2>\n        {bookListing}\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","import React from \"react\";\nimport Order from \"./Order\";\nimport Header from \"./Header\";\nimport Inventory from \"./Inventory\";\n\nimport \"../index.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      order: [],\n    };\n  }\n\n  addToOrder = (book) => {\n    this.setState({\n      order: [...this.state.order, book],\n    });\n  };\n\n  removeFromOrder = (title) => {\n    this.setState({\n      order: this.state.order.filter((book) => title !== book.name),\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"app container\">\n        <Header />\n        <div className=\"row\">\n          <Order\n            order={this.state.order}\n            removeFromOrder={this.removeFromOrder}\n          />\n          <Inventory books={this.state.books} addToOrder={this.addToOrder} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { firebaseApp } from \"../fbase\";\n\nclass LoginPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n\n  authenticate = (event) => {\n    event.preventDefault();\n    firebaseApp\n      .auth()\n      .signInWithEmailAndPassword(this.state.email, this.state.password)\n      .then(() => {\n        this.props.changeLoggedIn(true);\n      })\n      .catch(() => {\n        console.log(\"Unable to authenticate\");\n      });\n  };\n\n  handleLoginChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"col-xs-4 col-xs-offset-2 loginForm\">\n        <form onSubmit={this.authenticate}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"email\"\n              id=\"email_bs\"\n              name=\"email\"\n              className=\"form-control\"\n              onChange={this.handleLoginChange}\n              value={this.state.email}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"password\"\n              id=\"password_bs\"\n              name=\"password\"\n              className=\"form-control\"\n              onChange={this.handleLoginChange}\n              value={this.state.password}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Log in\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPanel;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { updateBookAction } from \"../store/actions\";\n\nclass AddBook extends React.Component {\n  handleChange = (event) => {\n    let newBook;\n\n    if (event.target.name === \"onStock\") {\n      newBook = {\n        ...this.props.book,\n        [event.target.name]: event.target.checked,\n      };\n    } else {\n      newBook = {\n        ...this.props.book,\n        [event.target.name]: event.target.value,\n      };\n    }\n\n    this.props.updateBook(newBook);\n  };\n\n  addNewBook = (event) => {\n    event.preventDefault();\n\n    if (!this.props.editMode) {\n      const newBook = { ...this.props.book };\n\n      this.props.addNewBook(newBook);\n\n      this.props.updateBook({\n        name: \"\",\n        author: \"\",\n        description: \"\",\n        onStock: true,\n        image: \"\",\n      });\n    } else {\n      const newBook = { ...this.props.book };\n\n      this.props.editBook(this.props.titleOfBookForRemoval, newBook);\n\n      this.props.updateBook({\n        name: \"\",\n        author: \"\",\n        description: \"\",\n        onStock: true,\n        image: \"\",\n      });\n    }\n\n    event.target.reset();\n  };\n\n  render() {\n    const label = this.props.editMode ? \"Edit\" : \"Add\";\n\n    return (\n      <div className=\"adminPanel col-xs-4\">\n        <form onSubmit={this.addNewBook}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Book name\"\n              id=\"name\"\n              name=\"name\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n              value={this.props.book.name}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Book author\"\n              id=\"author\"\n              name=\"author\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n              value={this.props.book.author}\n            />\n          </div>\n          <div className=\"form-group\">\n            <textarea\n              placeholder=\"Book description\"\n              id=\"description\"\n              name=\"description\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n              value={this.props.book.description}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"checkbox\"\n              id=\"onStock\"\n              name=\"onStock\"\n              className=\"form-check-input\"\n              onChange={this.handleChange}\n              value={this.props.book.onStock}\n            />\n            <label htmlFor=\"onStock\" className=\"form-check-label\">\n              On stock\n            </label>\n          </div>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              placeholder=\"Book image\"\n              id=\"image\"\n              name=\"image\"\n              className=\"form-control\"\n              onChange={this.handleChange}\n              value={this.props.book.image}\n            />\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            {label}\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateBook: (book) => dispatch(updateBookAction(book)),\n  };\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    book: state.book,\n    editMode: state.editMode,\n    titleOfBookForRemoval: state.titleOfBookForRemoval,\n  };\n};\n\nconst AddBookForm = connect(mapStateToProps, mapDispatchToProps)(AddBook);\n\nexport default AddBookForm;\n","export const UPDATE_BOOK = \"UPDATE_BOOK\";\nexport const SEND_BOOK_TO_EDIT = \"SEND_BOOK_TO_EDIT\";\n\nexport const updateBookAction = (book) => {\n  return {\n    type: UPDATE_BOOK,\n    payload: book,\n  };\n};\n\nexport const sendBookToEditAction = (book) => {\n  return {\n    type: SEND_BOOK_TO_EDIT,\n    payload: book,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { sendBookToEditAction } from \"../store/actions\";\n\nclass BookView extends React.Component {\n  render() {\n    return (\n      <div className=\"orderView row\">\n        <div className=\"col-xs-8\">\n          <span>\n            {this.props.book.name} {this.props.book.author}\n          </span>\n        </div>\n        <div className=\"col-xs-2\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={(event) => this.props.sendBookToEdit(this.props.book)}\n          >\n            Edit\n          </button>\n        </div>\n        <div className=\"col-xs-2\">\n          <button\n            className=\"btn btn-danger\"\n            onClick={(event) =>\n              this.props.removeFromInventory(this.props.book.name)\n            }\n          >\n            Remove\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {};\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendBookToEdit: (book) => dispatch(sendBookToEditAction(book)),\n  };\n};\n\nconst AdminBookView = connect(mapStateToProps, mapDispatchToProps)(BookView);\n\nexport default AdminBookView;\n","import React from \"react\";\nimport AdminBookView from \"./AdminBookView\";\n\nclass AdminBookListing extends React.Component {\n  render() {\n    let list = <div>No books in state</div>;\n\n    if (this.props.books && Array.isArray(this.props.books)) {\n      list = this.props.books.map((book) => {\n        return (\n          <AdminBookView\n            key={book.name}\n            book={book}\n            removeFromInventory={this.props.removeFromInventory}\n          />\n        );\n      });\n    }\n\n    return <div>{list}</div>;\n  }\n}\n\nexport default AdminBookListing;\n","import React from \"react\";\nimport LoginPanel from \"./LoginPanel\";\nimport AddBookForm from \"./AddBookForm\";\nimport AdminBookListing from \"./AdminBookListing\";\nimport { fbase } from \"../fbase\";\n\nclass AdminPanel extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedIn: false,\n    };\n  }\n\n  changeLoggedIn = (newValue) => this.setState({ loggedIn: newValue });\n\n  addNewBook = (book) => {\n    if (Array.isArray(this.state.books)) {\n      this.setState({ books: [...this.state.books, book] });\n    } else {\n      this.setState({ books: [book] });\n    }\n  };\n\n  componentDidMount() {\n    this.ref = fbase.syncState(\"bookstore/books\", {\n      context: this,\n      state: \"books\",\n    });\n  }\n\n  componentWillUnmount() {\n    fbase.removeBinding(this.ref);\n  }\n\n  removeFromInventory = (title) => {\n    this.setState({\n      books: this.state.books.filter((book) => title !== book.name),\n    });\n  };\n\n  editBook = (oldBookTitle, bookAfterEdit) => {\n    const newBooks = this.state.books.filter(\n      (book) => oldBookTitle !== book.name\n    );\n\n    this.setState({\n      books: [...newBooks, bookAfterEdit],\n    });\n  };\n  render() {\n    return (\n      <div>\n        {!this.state.loggedIn && (\n          <LoginPanel changeLoggedIn={this.changeLoggedIn} />\n        )}\n        {this.state.loggedIn && (\n          <React.Fragment>\n            <AddBookForm\n              addNewBook={this.addNewBook}\n              editBook={this.editBook}\n            />\n            <AdminBookListing\n              books={this.state.books}\n              removeFromInventory={this.removeFromInventory}\n            />\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default AdminPanel;\n","import React from \"react\";\n\nconst PageNotFound = () => {\n  return (\n    <React.Fragment>\n      <h2>Page Not Found!</h2>\n      <p>Please check URL address</p>\n    </React.Fragment>\n  );\n};\n\nexport default PageNotFound;\n","import { SEND_BOOK_TO_EDIT, UPDATE_BOOK } from \"./actions\";\n\nconst initialState = {\n  book: {\n    name: \"\",\n    author: \"\",\n    description: \"\",\n    onStock: true,\n    image: \"\",\n  },\n  editMode: false,\n  titleOfBookForRemoval: \"\",\n};\n\nconst adminPanelReducer = (state = initialState, action) => {\n  console.log(\"Action received \" + action.type);\n\n  switch (action.type) {\n    case UPDATE_BOOK:\n      const book = action.payload;\n      return { ...state, book };\n    case SEND_BOOK_TO_EDIT:\n      const bookToEdit = action.payload;\n      return {\n        ...state,\n        book: { ...bookToEdit },\n        editMode: true,\n        titleOfBookForRemoval: bookToEdit.name,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default adminPanelReducer;\n","import { createStore } from \"redux\";\nimport adminPanelReducer from \"./adminPanelReducer\";\n\nconst store = createStore(\n  adminPanelReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default store;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport App from \"./App\";\nimport AdminPanel from \"./AdminPanel\";\nimport PageNotFound from \"./PageNotFound\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store/store\";\n\nexport default class Router extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={App} />\n            <Route path=\"/admin\" component={AdminPanel} />\n            <Route component={PageNotFound} />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Router from \"./components/Router\";\n\nimport \"./index.css\";\n\nReactDOM.render(<Router />, document.getElementById(\"root\"));\n"],"sourceRoot":""}